1)def +(r:Rational) = new Rational(this.numer * r.denom +r.numer * this.denom, denom * r.denom)
def neg = new Rational(-this.numer,this.denom)
def -(r:Rational) = this+r

2)class Rational(x: Int, y: Int) { 
 def numer = x  
def denom = y  
def sub(r: Rational) =   
 new Rational(numer * r.denom - r.numer * denom, denom * r.denom) 
def mul(r: Rational) = ...  ...  
override def toString = numer + ”/” - denom } 

3)var bank:List[Account]=List() 
class Account(id:String,n: Int, b: Double) { 
val nic:String=id 
val acnumber: Int = n
 var  balance: Double = b
 override def toString =   "["+nic+":"+acnumber +":"+ balance+"]" }

def transfer(a:Account,b:Double)=
4)var bank:List[Account]=List()
val find=(n:String,b:List[Account])=> b.filter(x=>x.nic.equals(n))
//List of Accounts with negative balances 
val overdraft=(b:List[Account])=> b.filter(...)
 //Total of all account balances 
val balance=(b:List[Account])=> b.reduce(....)
 //If balance is positive deposit interest is .05 
//If balance is negative overdraft interest is .1 
val interest=(b:List[Account])=>b.map(....)